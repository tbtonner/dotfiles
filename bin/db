#!/bin/bash

# NOTE: you'll need to set the following environment variables in your shell:
# $DB_REGION
# $SBX_COUCHBASE_POD_NAME
# $DEV_COUCHBASE_CLUSTER_NAME
# $STAGE_COUCHBASE_CLUSTER_NAME

# Usage: db <dev|stage|sbx-X|qe-X> [local-port]
ENV=$1
LOCAL_PORT=$2
REMOTE_PORT=8091

# Validate input
if [[ -z "$ENV" ]]; then
  echo "Usage: $0 <dev|stage|sbx-X|qe-X> [local-port]"
  exit 1
fi

# Determine cluster and default local port
case "$ENV" in
  dev)
    CLUSTER_NAME=$DEV_COUCHBASE_CLUSTER_NAME
    ALIAS="dev-cp"
    REGION=$DB_REGION
    LOCAL_PORT=${LOCAL_PORT:-8097}
    ;;
  stage)
    CLUSTER_NAME=$STAGE_COUCHBASE_CLUSTER_NAME
    ALIAS="stage-cp"
    REGION=$DB_REGION
    LOCAL_PORT=${LOCAL_PORT:-8097}
    ;;
  sbx-*|qe-*)
    CLUSTER_NAME="$ENV-cp-eks"
    ALIAS="$ENV"
    REGION=$DB_REGION
    LOCAL_PORT=${LOCAL_PORT:-8091}
    ;;
  *)
    echo "Invalid environment. Must be dev, stage, sbx-x, or qe-x"
    exit 1
    ;;
esac

# Update kubeconfig
aws eks update-kubeconfig --alias "$ALIAS" --name "$CLUSTER_NAME" --region "$REGION"

# For sbx and qe, just port-forward cp-couchbase-0000
if [[ "$ENV" == sbx-* || "$ENV" == qe-* ]]; then
  POD=$SBX_COUCHBASE_POD_NAME
else
  # Pick a random running cp-couchbase pod
  POD=$(kubectl get pod --selector=app=couchbase \
        --field-selector=status.phase=Running \
        -o jsonpath='{.items[*].metadata.name}' | tr ' ' '\n' | grep '^cp-couchbase-' | shuf -n 1)

  if [ -z "$POD" ]; then
    echo "No running cp-couchbase pod found!"
    exit 1
  fi
fi

echo "Port-forwarding from pod $POD ($LOCAL_PORT:$REMOTE_PORT)..."
kubectl port-forward "$POD" "$LOCAL_PORT:$REMOTE_PORT"
